#!/usr/bin/env zsh

mkdir -p $UNITEST_build_DIR
pushd $UNITEST_build_DIR

model=$1
template_name=$2

if [[ ! -f ${UNITEST_kcg_DIR}/$model/scade_types.h ]]
then
	echo "unknown node name, please select one among the following: \n----"
	ls ${UNITEST_kcg_DIR}
	echo "----"
	return 1
fi

if [[ ! -d ${UNITEST_template_DIR}/${template_name}/include ]]
then
	echo "unknown template name, please select one among the following: \n----"
	ls ${UNITEST_template_DIR}
	echo "----"
	return 1
fi

if [[ -d ./$model/src/scade ]]
then
	rm -rf ./$model/src/scade/*.c
else
	mkdir -p ./$model/src/scade
fi
for file in ${UNITEST_kcg_DIR}/$model/*.c
do
 	gcc -fpreprocessed -dD -E -P "$file" > ./$model/src/scade/${file:t} 2> /dev/null
done
# cp ${UNITEST_kcg_DIR}/$model/*.c ./$model/src/scade

if [[ -d ./$model/include/scade ]]
then
	rm -rf ./$model/include/scade/*.h
else
	mkdir -p ./$model/include
fi
for file in ${UNITEST_kcg_DIR}/$model/*.h
do
 	gcc -fpreprocessed -dD -E -P "$file" > ./$model/include/scade/${file:t} 2> /dev/null
done
# cp ${UNITEST_kcg_DIR}/$model/*.h ./$model/include/scade

pushd ./$model/include/scade

if [[ -f ${model}_extern.h ]]
then
	echo "#include \"${model}_main.h\"\n\n" | > tmp
	cat ${model}_extern.h >> tmp
	mv tmp ${model}_extern.h
fi
popd

touch ./${model}/include/scade/${model}_extern.h

# for fctext, files are copied over, exiting files are overwritten by the ones in the template
cp -r ${UNITEST_template_DIR}/${template_name}/include/fctext ./$model/include

pushd $model

	# to remove comments 
	# 	gcc -fpreprocessed -dD -E -P "$file" > $rise_dir/src/scade/${file:t} 2> /dev/null

	clean_scade.py src/scade include/scade

	ln -snf ${model}_extern.h include/scade/model_extern.h

	# unitest_map_context $model
			
	_unitest_prepare_interface.py $model $template_name
	
	make clean all
	
popd
